{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(docker-compose:*)",
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(docker container prune:*)",
      "Bash(curl:*)",
      "Bash(docker exec:*)",
      "Bash(npm install:*)",
      "Bash(npx tsc:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(docker logs:*)",
      "Bash(npm run dev:*)",
      "Bash(npx ts-node:*)",
      "Bash(node:*)",
      "Bash(docker restart:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(docker volume rm:*)",
      "Bash(PORT=3002 node simple-server.js)",
      "Bash(taskkill:*)",
      "Bash(rm:*)",
      "mcp__ide__executeCode",
      "Bash(chmod:*)",
      "Bash(docker build:*)",
      "Bash(ls:*)",
      "Bash(.scriptsrun-docker.bat)",
      "Bash(scriptsrun-docker.bat)",
      "Bash(docker:*)",
      "Bash(cmd /c:*)",
      "Bash(powershell:*)",
      "Bash(touch:*)",
      "Bash(mv:*)",
      "Bash(dir:*)",
      "Bash(npm test)",
      "WebFetch(domain:prasadazka.github.io)",
      "Bash(timeout 5 npm run dev)",
      "Bash(timeout 10 npm run dev)",
      "Bash(timeout 30 npm run build)",
      "Bash(npm start)",
      "Bash(npm run:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(npm uninstall:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(npm ls:*)",
      "Bash(pdftotext:*)",
      "Bash(timeout:*)",
      "Bash(start /b node:*)",
      "Bash(openssl genrsa:*)",
      "Bash(openssl rsa:*)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\15\\bin\\psql.exe\" --version)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\16\\bin\\psql.exe\" --version)",
      "Bash(PGPASSWORD=12345 \"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -h localhost -p 5432 -d rabhan_auth -c \"\nCREATE TABLE users (\n  -- Core Identity\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  email VARCHAR(255) UNIQUE NOT NULL,\n  password_hash VARCHAR(255),\n  phone VARCHAR(20),\n  national_id VARCHAR(10) UNIQUE,\n  \n  -- Names (from frontend forms)\n  first_name VARCHAR(50) NOT NULL,\n  last_name VARCHAR(50) NOT NULL,\n  \n  -- Role & Status\n  role user_role DEFAULT ''USER'',\n  status user_status DEFAULT ''PENDING'',\n  user_type user_type_enum DEFAULT ''HOMEOWNER'',\n  \n  -- NAFATH Integration\n  provider auth_provider DEFAULT ''EMAIL'',\n  nafath_verified BOOLEAN DEFAULT false,\n  nafath_user_id VARCHAR(255),\n  nafath_verification_date TIMESTAMP,\n  \n  -- Credit & BNPL (SIMAH integration)\n  credit_report_status credit_status_enum DEFAULT ''PENDING'',\n  bnpl_eligible BOOLEAN DEFAULT false,\n  simah_verified BOOLEAN DEFAULT false,\n  simah_verification_date TIMESTAMP,\n  \n  -- Security & Verification\n  email_verified BOOLEAN DEFAULT false,\n  email_verified_at TIMESTAMP,\n  phone_verified BOOLEAN DEFAULT false,\n  phone_verified_at TIMESTAMP,\n  phone_verification_attempts INTEGER DEFAULT 0,\n  email_verification_attempts INTEGER DEFAULT 0,\n  \n  -- MFA\n  mfa_enabled BOOLEAN DEFAULT false,\n  mfa_secret VARCHAR(255),\n  \n  -- Account Security\n  login_attempts INTEGER DEFAULT 0,\n  locked_until TIMESTAMP,\n  \n  -- SAMA Compliance\n  sama_verified BOOLEAN DEFAULT false,\n  sama_verification_date TIMESTAMP,\n  risk_category VARCHAR(50),\n  \n  -- Timestamps\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  last_login_at TIMESTAMP,\n  \n  -- Constraints\n  CONSTRAINT valid_national_id CHECK (national_id ~ ''^[12][0-9]{9}$''),\n  CONSTRAINT valid_phone CHECK (phone ~ ''^\\+966[0-9]{9}$'' OR phone ~ ''^\\+91[0-9]{10}$''),\n  CONSTRAINT valid_email CHECK (email ~ ''^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'')\n);\")",
      "Bash(PGPASSWORD=12345 \"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -h localhost -p 5432 -d rabhan_auth -c \"\n-- User sessions table\nCREATE TABLE user_sessions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,\n  refresh_token VARCHAR(500) NOT NULL,\n  device_id VARCHAR(255),\n  user_agent TEXT,\n  ip_address INET,\n  expires_at TIMESTAMP NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n  last_accessed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Password reset tokens\nCREATE TABLE password_reset_tokens (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,\n  token VARCHAR(255) NOT NULL,\n  expires_at TIMESTAMP NOT NULL,\n  used BOOLEAN DEFAULT false,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\")",
      "Bash(PGPASSWORD=12345 \"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -h localhost -p 5432 -d rabhan_auth -c \"\n-- Add update trigger for users\nCREATE OR REPLACE FUNCTION update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n    NEW.updated_at = CURRENT_TIMESTAMP;\n    RETURN NEW;\nEND;\n$$ language ''plpgsql'';\n\nCREATE TRIGGER update_users_updated_at BEFORE UPDATE ON users\nFOR EACH ROW EXECUTE FUNCTION update_updated_at_column();\")",
      "Bash(PGPASSWORD:*)",
      "Bash(psql:*)",
      "Bash(where psql)",
      "Bash(set PORT=3000)",
      "Bash(set PGPASSWORD=12345)",
      "Bash(move auth-app rabhan-web)",
      "Bash(ren:*)",
      "Bash(wmic process where processid=19320 delete:*)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\14\\bin\\psql.exe\" --version)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" --version)",
      "Bash(set PGPASSWORD=password)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -c \"\\l\")",
      "Bash(set POSTGRES_PASSWORD=password)",
      "Bash(set POSTGRES_PASSWORD=postgres)",
      "Bash(sc query:*)",
      "Bash(set POSTGRES_PASSWORD=12345)",
      "Bash(\"C:\\Program Files\\PostgreSQL\\17\\bin\\psql.exe\" -U postgres -c \"SELECT version();\")",
      "Bash(del debug-db.js run-migrations.js migrations-fixed.sql)",
      "Bash(attrib:*)",
      "Bash(if exist \"*.jpg\" mv *.jpg tests/assets/)",
      "Bash(\"taskkill\" \"/f\" \"/pid\" \"14464\")",
      "Bash(wmic process where processid=14464 delete:*)",
      "Bash(wmic process where processid=19440 delete:*)"
    ],
    "deny": []
  }
}